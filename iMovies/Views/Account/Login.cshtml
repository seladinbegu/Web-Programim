@model iMovies.Models.LoginModel

@{
    ViewData["Title"] = "Login";
}


<div class="container d-flex justify-content-center align-items-center" style="min-height: 80vh;">
    <div class="card p-4 shadow" style="width: 100%; max-width: 400px; border-radius: 12px;">
        <h2 class="text-center my-4">Login</h2>

        <form id="loginForm">
            <div class="form-group mb-3">
                <label asp-for="Username" class="form-label fw-bold">Username</label>
                <input asp-for="Username" class="form-control" id="username" placeholder="Enter your username" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>

            <div class="form-group mb-4">
                <label asp-for="Password" class="form-label fw-bold">Password</label>
                <input asp-for="Password" type="password" class="form-control" id="password"
                    placeholder="Enter your password" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>

            <button type="submit" class="btn btn-primary w-100 py-2">Login</button>
        </form>
        <div class="mt-3 text-center">
            <a href="/Account/Register">Don't have an account? Register here</a>
        </div>

    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Add event listener to handle form submission
        document.getElementById('loginForm').addEventListener('submit', async function (event) {
            event.preventDefault(); // Prevent the default form submission

            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;

            // Create an object with the username and password
            const loginData = {
                username: username,
                password: password
            };

            try {
                // Send POST request to the backend API using Fetch API
                const response = await fetch('/api/Auth/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(loginData)
                });

                if (response.ok) {
                    const data = await response.json();
                    // Store tokens or handle login success
                    console.log('Login successful:', data);
                    // Redirect to another page or perform actions
                    window.location.href = '/Home/Index'; // Redirect to home page on successful login
                } else {
                    const errorData = await response.json();
                    console.error('Login failed:', errorData);
                    alert('Invalid login attempt. Please try again.');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred during login.');
            }
        });
    </script>
}
